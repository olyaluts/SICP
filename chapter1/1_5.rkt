#lang racket
(define (p) (p))
(define (test x y)
  (if (= x 0) 0 y))

(test 0 (p))
; При апликативном порядке вычислений, программа никогда не завершится, т.к. функция p
; будет вызвана сразу при передаче аргументов в функцию test, что приведет к бесконечной рекурсии.
; При нормальном порядке вычислений, функция p будет вызвана только тогда, когда первй аргумент функции test
; будет не равен 0, иначе программа тоже будет выполняться бесконечно.